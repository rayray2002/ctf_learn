
vuln      檔案格式 elf32-i386


.init 區段的反組譯：

00001000 <_init>:
    1000:	f3 0f 1e fb          	endbr32 
    1004:	53                   	push   ebx
    1005:	83 ec 08             	sub    esp,0x8
    1008:	e8 03 02 00 00       	call   1210 <__x86.get_pc_thunk.bx>
    100d:	81 c3 9f 2f 00 00    	add    ebx,0x2f9f
    1013:	8b 83 44 00 00 00    	mov    eax,DWORD PTR [ebx+0x44]
    1019:	85 c0                	test   eax,eax
    101b:	74 02                	je     101f <_init+0x1f>
    101d:	ff d0                	call   eax
    101f:	83 c4 08             	add    esp,0x8
    1022:	5b                   	pop    ebx
    1023:	c3                   	ret    

.plt 區段的反組譯：

00001030 <.plt>:
    1030:	ff b3 04 00 00 00    	push   DWORD PTR [ebx+0x4]
    1036:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx+0x8]
    103c:	0f 1f 40 00          	nop    DWORD PTR [eax+0x0]
    1040:	f3 0f 1e fb          	endbr32 
    1044:	68 00 00 00 00       	push   0x0
    1049:	e9 e2 ff ff ff       	jmp    1030 <.plt>
    104e:	66 90                	xchg   ax,ax
    1050:	f3 0f 1e fb          	endbr32 
    1054:	68 08 00 00 00       	push   0x8
    1059:	e9 d2 ff ff ff       	jmp    1030 <.plt>
    105e:	66 90                	xchg   ax,ax
    1060:	f3 0f 1e fb          	endbr32 
    1064:	68 10 00 00 00       	push   0x10
    1069:	e9 c2 ff ff ff       	jmp    1030 <.plt>
    106e:	66 90                	xchg   ax,ax
    1070:	f3 0f 1e fb          	endbr32 
    1074:	68 18 00 00 00       	push   0x18
    1079:	e9 b2 ff ff ff       	jmp    1030 <.plt>
    107e:	66 90                	xchg   ax,ax
    1080:	f3 0f 1e fb          	endbr32 
    1084:	68 20 00 00 00       	push   0x20
    1089:	e9 a2 ff ff ff       	jmp    1030 <.plt>
    108e:	66 90                	xchg   ax,ax
    1090:	f3 0f 1e fb          	endbr32 
    1094:	68 28 00 00 00       	push   0x28
    1099:	e9 92 ff ff ff       	jmp    1030 <.plt>
    109e:	66 90                	xchg   ax,ax
    10a0:	f3 0f 1e fb          	endbr32 
    10a4:	68 30 00 00 00       	push   0x30
    10a9:	e9 82 ff ff ff       	jmp    1030 <.plt>
    10ae:	66 90                	xchg   ax,ax
    10b0:	f3 0f 1e fb          	endbr32 
    10b4:	68 38 00 00 00       	push   0x38
    10b9:	e9 72 ff ff ff       	jmp    1030 <.plt>
    10be:	66 90                	xchg   ax,ax
    10c0:	f3 0f 1e fb          	endbr32 
    10c4:	68 40 00 00 00       	push   0x40
    10c9:	e9 62 ff ff ff       	jmp    1030 <.plt>
    10ce:	66 90                	xchg   ax,ax
    10d0:	f3 0f 1e fb          	endbr32 
    10d4:	68 48 00 00 00       	push   0x48
    10d9:	e9 52 ff ff ff       	jmp    1030 <.plt>
    10de:	66 90                	xchg   ax,ax
    10e0:	f3 0f 1e fb          	endbr32 
    10e4:	68 50 00 00 00       	push   0x50
    10e9:	e9 42 ff ff ff       	jmp    1030 <.plt>
    10ee:	66 90                	xchg   ax,ax
    10f0:	f3 0f 1e fb          	endbr32 
    10f4:	68 58 00 00 00       	push   0x58
    10f9:	e9 32 ff ff ff       	jmp    1030 <.plt>
    10fe:	66 90                	xchg   ax,ax

.plt.got 區段的反組譯：

00001100 <__cxa_finalize@plt>:
    1100:	f3 0f 1e fb          	endbr32 
    1104:	ff a3 40 00 00 00    	jmp    DWORD PTR [ebx+0x40]
    110a:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

.plt.sec 區段的反組譯：

00001110 <printf@plt>:
    1110:	f3 0f 1e fb          	endbr32 
    1114:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx+0xc]
    111a:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

00001120 <fflush@plt>:
    1120:	f3 0f 1e fb          	endbr32 
    1124:	ff a3 10 00 00 00    	jmp    DWORD PTR [ebx+0x10]
    112a:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

00001130 <gets@plt>:
    1130:	f3 0f 1e fb          	endbr32 
    1134:	ff a3 14 00 00 00    	jmp    DWORD PTR [ebx+0x14]
    113a:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

00001140 <fgets@plt>:
    1140:	f3 0f 1e fb          	endbr32 
    1144:	ff a3 18 00 00 00    	jmp    DWORD PTR [ebx+0x18]
    114a:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

00001150 <signal@plt>:
    1150:	f3 0f 1e fb          	endbr32 
    1154:	ff a3 1c 00 00 00    	jmp    DWORD PTR [ebx+0x1c]
    115a:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

00001160 <getegid@plt>:
    1160:	f3 0f 1e fb          	endbr32 
    1164:	ff a3 20 00 00 00    	jmp    DWORD PTR [ebx+0x20]
    116a:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

00001170 <strcpy@plt>:
    1170:	f3 0f 1e fb          	endbr32 
    1174:	ff a3 24 00 00 00    	jmp    DWORD PTR [ebx+0x24]
    117a:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

00001180 <puts@plt>:
    1180:	f3 0f 1e fb          	endbr32 
    1184:	ff a3 28 00 00 00    	jmp    DWORD PTR [ebx+0x28]
    118a:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

00001190 <exit@plt>:
    1190:	f3 0f 1e fb          	endbr32 
    1194:	ff a3 2c 00 00 00    	jmp    DWORD PTR [ebx+0x2c]
    119a:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

000011a0 <__libc_start_main@plt>:
    11a0:	f3 0f 1e fb          	endbr32 
    11a4:	ff a3 30 00 00 00    	jmp    DWORD PTR [ebx+0x30]
    11aa:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

000011b0 <fopen@plt>:
    11b0:	f3 0f 1e fb          	endbr32 
    11b4:	ff a3 34 00 00 00    	jmp    DWORD PTR [ebx+0x34]
    11ba:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

000011c0 <setresgid@plt>:
    11c0:	f3 0f 1e fb          	endbr32 
    11c4:	ff a3 38 00 00 00    	jmp    DWORD PTR [ebx+0x38]
    11ca:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

.text 區段的反組譯：

000011d0 <_start>:
    11d0:	f3 0f 1e fb          	endbr32 
    11d4:	31 ed                	xor    ebp,ebp
    11d6:	5e                   	pop    esi
    11d7:	89 e1                	mov    ecx,esp
    11d9:	83 e4 f0             	and    esp,0xfffffff0
    11dc:	50                   	push   eax
    11dd:	54                   	push   esp
    11de:	52                   	push   edx
    11df:	e8 22 00 00 00       	call   1206 <_start+0x36>
    11e4:	81 c3 c8 2d 00 00    	add    ebx,0x2dc8
    11ea:	8d 83 64 d5 ff ff    	lea    eax,[ebx-0x2a9c]
    11f0:	50                   	push   eax
    11f1:	8d 83 f4 d4 ff ff    	lea    eax,[ebx-0x2b0c]
    11f7:	50                   	push   eax
    11f8:	51                   	push   ecx
    11f9:	56                   	push   esi
    11fa:	ff b3 4c 00 00 00    	push   DWORD PTR [ebx+0x4c]
    1200:	e8 9b ff ff ff       	call   11a0 <__libc_start_main@plt>
    1205:	f4                   	hlt    
    1206:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
    1209:	c3                   	ret    
    120a:	66 90                	xchg   ax,ax
    120c:	66 90                	xchg   ax,ax
    120e:	66 90                	xchg   ax,ax

00001210 <__x86.get_pc_thunk.bx>:
    1210:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
    1213:	c3                   	ret    
    1214:	66 90                	xchg   ax,ax
    1216:	66 90                	xchg   ax,ax
    1218:	66 90                	xchg   ax,ax
    121a:	66 90                	xchg   ax,ax
    121c:	66 90                	xchg   ax,ax
    121e:	66 90                	xchg   ax,ax

00001220 <deregister_tm_clones>:
    1220:	e8 e4 00 00 00       	call   1309 <__x86.get_pc_thunk.dx>
    1225:	81 c2 87 2d 00 00    	add    edx,0x2d87
    122b:	8d 8a 5c 00 00 00    	lea    ecx,[edx+0x5c]
    1231:	8d 82 5c 00 00 00    	lea    eax,[edx+0x5c]
    1237:	39 c8                	cmp    eax,ecx
    1239:	74 1d                	je     1258 <deregister_tm_clones+0x38>
    123b:	8b 82 3c 00 00 00    	mov    eax,DWORD PTR [edx+0x3c]
    1241:	85 c0                	test   eax,eax
    1243:	74 13                	je     1258 <deregister_tm_clones+0x38>
    1245:	55                   	push   ebp
    1246:	89 e5                	mov    ebp,esp
    1248:	83 ec 14             	sub    esp,0x14
    124b:	51                   	push   ecx
    124c:	ff d0                	call   eax
    124e:	83 c4 10             	add    esp,0x10
    1251:	c9                   	leave  
    1252:	c3                   	ret    
    1253:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
    1257:	90                   	nop
    1258:	c3                   	ret    
    1259:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00001260 <register_tm_clones>:
    1260:	e8 a4 00 00 00       	call   1309 <__x86.get_pc_thunk.dx>
    1265:	81 c2 47 2d 00 00    	add    edx,0x2d47
    126b:	55                   	push   ebp
    126c:	89 e5                	mov    ebp,esp
    126e:	53                   	push   ebx
    126f:	8d 8a 5c 00 00 00    	lea    ecx,[edx+0x5c]
    1275:	8d 82 5c 00 00 00    	lea    eax,[edx+0x5c]
    127b:	83 ec 04             	sub    esp,0x4
    127e:	29 c8                	sub    eax,ecx
    1280:	89 c3                	mov    ebx,eax
    1282:	c1 e8 1f             	shr    eax,0x1f
    1285:	c1 fb 02             	sar    ebx,0x2
    1288:	01 d8                	add    eax,ebx
    128a:	d1 f8                	sar    eax,1
    128c:	74 14                	je     12a2 <register_tm_clones+0x42>
    128e:	8b 92 50 00 00 00    	mov    edx,DWORD PTR [edx+0x50]
    1294:	85 d2                	test   edx,edx
    1296:	74 0a                	je     12a2 <register_tm_clones+0x42>
    1298:	83 ec 08             	sub    esp,0x8
    129b:	50                   	push   eax
    129c:	51                   	push   ecx
    129d:	ff d2                	call   edx
    129f:	83 c4 10             	add    esp,0x10
    12a2:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    12a5:	c9                   	leave  
    12a6:	c3                   	ret    
    12a7:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
    12ae:	66 90                	xchg   ax,ax

000012b0 <__do_global_dtors_aux>:
    12b0:	f3 0f 1e fb          	endbr32 
    12b4:	55                   	push   ebp
    12b5:	89 e5                	mov    ebp,esp
    12b7:	53                   	push   ebx
    12b8:	e8 53 ff ff ff       	call   1210 <__x86.get_pc_thunk.bx>
    12bd:	81 c3 ef 2c 00 00    	add    ebx,0x2cef
    12c3:	83 ec 04             	sub    esp,0x4
    12c6:	80 bb 74 00 00 00 00 	cmp    BYTE PTR [ebx+0x74],0x0
    12cd:	75 27                	jne    12f6 <__do_global_dtors_aux+0x46>
    12cf:	8b 83 40 00 00 00    	mov    eax,DWORD PTR [ebx+0x40]
    12d5:	85 c0                	test   eax,eax
    12d7:	74 11                	je     12ea <__do_global_dtors_aux+0x3a>
    12d9:	83 ec 0c             	sub    esp,0xc
    12dc:	ff b3 58 00 00 00    	push   DWORD PTR [ebx+0x58]
    12e2:	e8 19 fe ff ff       	call   1100 <__cxa_finalize@plt>
    12e7:	83 c4 10             	add    esp,0x10
    12ea:	e8 31 ff ff ff       	call   1220 <deregister_tm_clones>
    12ef:	c6 83 74 00 00 00 01 	mov    BYTE PTR [ebx+0x74],0x1
    12f6:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    12f9:	c9                   	leave  
    12fa:	c3                   	ret    
    12fb:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
    12ff:	90                   	nop

00001300 <frame_dummy>:
    1300:	f3 0f 1e fb          	endbr32 
    1304:	e9 57 ff ff ff       	jmp    1260 <register_tm_clones>

00001309 <__x86.get_pc_thunk.dx>:
    1309:	8b 14 24             	mov    edx,DWORD PTR [esp]
    130c:	c3                   	ret    

0000130d <sigsegv_handler>:
    130d:	f3 0f 1e fb          	endbr32 
    1311:	55                   	push   ebp
    1312:	89 e5                	mov    ebp,esp
    1314:	53                   	push   ebx
    1315:	83 ec 04             	sub    esp,0x4
    1318:	e8 f3 fe ff ff       	call   1210 <__x86.get_pc_thunk.bx>
    131d:	81 c3 8f 2c 00 00    	add    ebx,0x2c8f
    1323:	83 ec 0c             	sub    esp,0xc
    1326:	8d 83 94 00 00 00    	lea    eax,[ebx+0x94]
    132c:	50                   	push   eax
    132d:	e8 4e fe ff ff       	call   1180 <puts@plt>
    1332:	83 c4 10             	add    esp,0x10
    1335:	8b 83 48 00 00 00    	mov    eax,DWORD PTR [ebx+0x48]
    133b:	8b 00                	mov    eax,DWORD PTR [eax]
    133d:	83 ec 0c             	sub    esp,0xc
    1340:	50                   	push   eax
    1341:	e8 da fd ff ff       	call   1120 <fflush@plt>
    1346:	83 c4 10             	add    esp,0x10
    1349:	83 ec 0c             	sub    esp,0xc
    134c:	6a 01                	push   0x1
    134e:	e8 3d fe ff ff       	call   1190 <exit@plt>

00001353 <vuln>:
    1353:	f3 0f 1e fb          	endbr32 
    1357:	55                   	push   ebp
    1358:	89 e5                	mov    ebp,esp
    135a:	53                   	push   ebx
    135b:	83 ec 14             	sub    esp,0x14
    135e:	e8 38 01 00 00       	call   149b <__x86.get_pc_thunk.ax>
    1363:	05 49 2c 00 00       	add    eax,0x2c49
    1368:	83 ec 08             	sub    esp,0x8
    136b:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    136e:	8d 55 e8             	lea    edx,[ebp-0x18]
    1371:	52                   	push   edx
    1372:	89 c3                	mov    ebx,eax
    1374:	e8 f7 fd ff ff       	call   1170 <strcpy@plt>
    1379:	83 c4 10             	add    esp,0x10
    137c:	90                   	nop
    137d:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1380:	c9                   	leave  
    1381:	c3                   	ret    

00001382 <main>:
    1382:	f3 0f 1e fb          	endbr32 
    1386:	8d 4c 24 04          	lea    ecx,[esp+0x4]
    138a:	83 e4 f0             	and    esp,0xfffffff0
    138d:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
    1390:	55                   	push   ebp
    1391:	89 e5                	mov    ebp,esp
    1393:	53                   	push   ebx
    1394:	51                   	push   ecx
    1395:	83 ec 70             	sub    esp,0x70
    1398:	e8 73 fe ff ff       	call   1210 <__x86.get_pc_thunk.bx>
    139d:	81 c3 0f 2c 00 00    	add    ebx,0x2c0f
    13a3:	83 ec 08             	sub    esp,0x8
    13a6:	8d 83 5c e0 ff ff    	lea    eax,[ebx-0x1fa4]
    13ac:	50                   	push   eax
    13ad:	8d 83 5e e0 ff ff    	lea    eax,[ebx-0x1fa2]
    13b3:	50                   	push   eax
    13b4:	e8 f7 fd ff ff       	call   11b0 <fopen@plt>
    13b9:	83 c4 10             	add    esp,0x10
    13bc:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    13bf:	83 7d f4 00          	cmp    DWORD PTR [ebp-0xc],0x0
    13c3:	75 2a                	jne    13ef <main+0x6d>
    13c5:	83 ec 04             	sub    esp,0x4
    13c8:	8d 83 67 e0 ff ff    	lea    eax,[ebx-0x1f99]
    13ce:	50                   	push   eax
    13cf:	8d 83 7c e0 ff ff    	lea    eax,[ebx-0x1f84]
    13d5:	50                   	push   eax
    13d6:	8d 83 b1 e0 ff ff    	lea    eax,[ebx-0x1f4f]
    13dc:	50                   	push   eax
    13dd:	e8 2e fd ff ff       	call   1110 <printf@plt>
    13e2:	83 c4 10             	add    esp,0x10
    13e5:	83 ec 0c             	sub    esp,0xc
    13e8:	6a 00                	push   0x0
    13ea:	e8 a1 fd ff ff       	call   1190 <exit@plt>
    13ef:	83 ec 04             	sub    esp,0x4
    13f2:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
    13f5:	6a 40                	push   0x40
    13f7:	8d 83 94 00 00 00    	lea    eax,[ebx+0x94]
    13fd:	50                   	push   eax
    13fe:	e8 3d fd ff ff       	call   1140 <fgets@plt>
    1403:	83 c4 10             	add    esp,0x10
    1406:	83 ec 08             	sub    esp,0x8
    1409:	8d 83 61 d3 ff ff    	lea    eax,[ebx-0x2c9f]
    140f:	50                   	push   eax
    1410:	6a 0b                	push   0xb
    1412:	e8 39 fd ff ff       	call   1150 <signal@plt>
    1417:	83 c4 10             	add    esp,0x10
    141a:	e8 41 fd ff ff       	call   1160 <getegid@plt>
    141f:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    1422:	83 ec 04             	sub    esp,0x4
    1425:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
    1428:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
    142b:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
    142e:	e8 8d fd ff ff       	call   11c0 <setresgid@plt>
    1433:	83 c4 10             	add    esp,0x10
    1436:	83 ec 0c             	sub    esp,0xc
    1439:	8d 83 b7 e0 ff ff    	lea    eax,[ebx-0x1f49]
    143f:	50                   	push   eax
    1440:	e8 cb fc ff ff       	call   1110 <printf@plt>
    1445:	83 c4 10             	add    esp,0x10
    1448:	8b 83 48 00 00 00    	mov    eax,DWORD PTR [ebx+0x48]
    144e:	8b 00                	mov    eax,DWORD PTR [eax]
    1450:	83 ec 0c             	sub    esp,0xc
    1453:	50                   	push   eax
    1454:	e8 c7 fc ff ff       	call   1120 <fflush@plt>
    1459:	83 c4 10             	add    esp,0x10
    145c:	83 ec 0c             	sub    esp,0xc
    145f:	8d 45 8c             	lea    eax,[ebp-0x74]
    1462:	50                   	push   eax
    1463:	e8 c8 fc ff ff       	call   1130 <gets@plt>
    1468:	83 c4 10             	add    esp,0x10
    146b:	83 ec 0c             	sub    esp,0xc
    146e:	8d 45 8c             	lea    eax,[ebp-0x74]
    1471:	50                   	push   eax
    1472:	e8 dc fe ff ff       	call   1353 <vuln>
    1477:	83 c4 10             	add    esp,0x10
    147a:	83 ec 0c             	sub    esp,0xc
    147d:	8d 83 bf e0 ff ff    	lea    eax,[ebx-0x1f41]
    1483:	50                   	push   eax
    1484:	e8 f7 fc ff ff       	call   1180 <puts@plt>
    1489:	83 c4 10             	add    esp,0x10
    148c:	b8 00 00 00 00       	mov    eax,0x0
    1491:	8d 65 f8             	lea    esp,[ebp-0x8]
    1494:	59                   	pop    ecx
    1495:	5b                   	pop    ebx
    1496:	5d                   	pop    ebp
    1497:	8d 61 fc             	lea    esp,[ecx-0x4]
    149a:	c3                   	ret    

0000149b <__x86.get_pc_thunk.ax>:
    149b:	8b 04 24             	mov    eax,DWORD PTR [esp]
    149e:	c3                   	ret    
    149f:	90                   	nop

000014a0 <__libc_csu_init>:
    14a0:	f3 0f 1e fb          	endbr32 
    14a4:	55                   	push   ebp
    14a5:	e8 6b 00 00 00       	call   1515 <__x86.get_pc_thunk.bp>
    14aa:	81 c5 02 2b 00 00    	add    ebp,0x2b02
    14b0:	57                   	push   edi
    14b1:	56                   	push   esi
    14b2:	53                   	push   ebx
    14b3:	83 ec 0c             	sub    esp,0xc
    14b6:	89 eb                	mov    ebx,ebp
    14b8:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
    14bc:	e8 3f fb ff ff       	call   1000 <_init>
    14c1:	8d 9d 04 ff ff ff    	lea    ebx,[ebp-0xfc]
    14c7:	8d 85 00 ff ff ff    	lea    eax,[ebp-0x100]
    14cd:	29 c3                	sub    ebx,eax
    14cf:	c1 fb 02             	sar    ebx,0x2
    14d2:	74 29                	je     14fd <__libc_csu_init+0x5d>
    14d4:	31 f6                	xor    esi,esi
    14d6:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
    14dd:	8d 76 00             	lea    esi,[esi+0x0]
    14e0:	83 ec 04             	sub    esp,0x4
    14e3:	57                   	push   edi
    14e4:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
    14e8:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
    14ec:	ff 94 b5 00 ff ff ff 	call   DWORD PTR [ebp+esi*4-0x100]
    14f3:	83 c6 01             	add    esi,0x1
    14f6:	83 c4 10             	add    esp,0x10
    14f9:	39 f3                	cmp    ebx,esi
    14fb:	75 e3                	jne    14e0 <__libc_csu_init+0x40>
    14fd:	83 c4 0c             	add    esp,0xc
    1500:	5b                   	pop    ebx
    1501:	5e                   	pop    esi
    1502:	5f                   	pop    edi
    1503:	5d                   	pop    ebp
    1504:	c3                   	ret    
    1505:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
    150c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00001510 <__libc_csu_fini>:
    1510:	f3 0f 1e fb          	endbr32 
    1514:	c3                   	ret    

00001515 <__x86.get_pc_thunk.bp>:
    1515:	8b 2c 24             	mov    ebp,DWORD PTR [esp]
    1518:	c3                   	ret    

.fini 區段的反組譯：

0000151c <_fini>:
    151c:	f3 0f 1e fb          	endbr32 
    1520:	53                   	push   ebx
    1521:	83 ec 08             	sub    esp,0x8
    1524:	e8 e7 fc ff ff       	call   1210 <__x86.get_pc_thunk.bx>
    1529:	81 c3 83 2a 00 00    	add    ebx,0x2a83
    152f:	83 c4 08             	add    esp,0x8
    1532:	5b                   	pop    ebx
    1533:	c3                   	ret    
